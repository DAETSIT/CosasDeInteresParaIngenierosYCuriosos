GITHUB es un repositorio git vía web.
Esta pensado para el control de versiones, por lo que es muy útil para el 
trabajo colaborativo.
Aquí os dejo una dirección web donde podéis encontrar información: 
http://git-scm.com/doc
He usado la notacion <variable> para señalar lo  que se debe sustituir

*********************************************
*Mini-resumen de lo mas básico para  operar:*
*********************************************
Instalando git en Ubuntu:
    sudo apt-get install git-core
Para una gestión gráfica:
    sudo apt-get install gitk git-gui git-doc

Colaborar en un repositorio: 
    Vais a la pagina web del repositorio, y hacéis un fork de el. 
    El fork crea una nueva rama que os permitirá editarlo. 
    
    Para hacer una copia del repositorio: con git clone y la dirección que aparece a la derecha.
       ej:  git clone https://github.com/DAETSIT/Para_ingenieros_y_curiosos.git
    
    Una vez se tiene la carpeta, hay que hacer:
        ej: git remote add upstream git@github.com:DAETSIT/ElNombreDelRepositorio.git
        Ahora ya podéis usar la carpeta como un git normal y se os bajaran los 
        cambios de la principal.   
        
    Para integrar los cambios  después de haber realizado lo cambios en los forks (las copias)
    Se hace clic en Pull Requests!, una vez el cambio se haya aprobado aparecerá todo integrado.   
             
Usando git: 
    Para crear una rama (solo la primera vez):
        git checkout -b <Nombre_De_La_Rama>      //cambia de rama
        
        git branch <Nombre_De_La_Rama>           //se mantiene  en la rama
        
    Eliminar rama
        git branch -d  <Nombre_De_La_Rama>
        
    Para cambiar de rama (siempre es mejor trabajar en una rama borrador):
       git checkout <Nombre_De_La_Rama>
   
    Para volver al pasado (solo vuelves en modo lectura)
       git checkout <Trocito_Del_Codigo_Que_Da_Git_Log_En_Commit>
       ej:->  git checkout 8461d8b0af
       para poder editar tienes que crear una rama con git branch NombreDeLaRama
    
    Listar las ramas y ver cual esta activa (activa => *):
        git branch
        
    Fusionar la rama Master con el principal web(upstream)(bajar los cambios):
        git pull upstream master
        git fetch
        
    Fusionar la rama borrador con la rama en la que estas(añadir a master los cambio):
        git merge --squash <Nombre_De_La_Rama>
            la opción --squash es para  comprimir las etiquetas en la 
            rama borrador y que aparezcan solo como 1 en la rama desde la que se ejecuta.
        
        git rebase master  //Master actualiza
        
    Ver la situación de los ficheros:
        git status
        
    Añadir un fichero:
        git add <Nombre_Fichero>
    Añadir todos los ficheros del directorio:
        git add .
        
    Para guardar el estado (hacerlo solo en la rama borrador principalmente):
        git commit --all -m '<Comentario_Que_Identifique_El_Cambio>' 
    
        git commit -a -m '<Comentario_Que_Identifique_El_Cambio>' 
        
    Restaurar fichero a la ultima version commiteada
        git checkout -- <Nombre_Fichero>
        
    crear etiquetas para versiones 
        git tag -a v1.4 -m '<Comentario_Que_Identifique_La_Version>'
        
    Para deshacer el ultimo commit:
        git commit --amend
            
    Para subir el cambio al fork de gitHub:
        git push    
        git push origin <Rama_A_Subir>
        
    Para ver historial de cambios:
        git log
        para salir solo hay que escribir q
   
Bajar solo un fichero desde la web:
    En el navegador: Seleccionar el fichero, elegir vista raw y guardar como. 
    Raw quita el marcado y te permite bajar el código como esta escrito originalmente.
    
Publicar repositorio como web:
    Se debe tener un index.html es lo que servira github.
    Crea una rama llamada gh-pages, esta indica a github que debe servir su contenido.
        git checkout -b gh-pages
    Sube el contenido
        git push -u origin gh-pages
    La página se muestra en:
        http(s)://<username>.github.io/<projectname>.

Enlace de interes
[github pages](https://help.github.com/categories/github-pages-basics/)
